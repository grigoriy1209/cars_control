# Generated by Django 5.1.3 on 2024-11-27 21:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.all_cars.listings.services


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dropout_cars', '0003_remove_modelcar_brands_modelcar_brand'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(2024)])),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('mileage', models.IntegerField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(1000000)])),
                ('currency', models.CharField(choices=[('USD', 'Usd'), ('EUR', 'Eur'), ('UAH', 'Uah')], max_length=15)),
                ('body_type', models.CharField(choices=[('sedan', 'Sedan'), ('hatchback', 'Hatchback'), ('suv', 'Suv'), ('crossover', 'Crossover'), ('coupe', 'Coupe'), ('convertible', 'Convertible'), ('wagon', 'Wagon'), ('pickup', 'Pickup'), ('minivan', 'Minivan'), ('van', 'Van'), ('roadster', 'Roadster'), ('luxury car', 'Luxury Car'), ('sport car', 'Sport Car')], max_length=25)),
                ('engine', models.CharField(choices=[('inline', 'Inline'), ('v-type', 'V Type'), ('flat', 'Flat'), ('rotary', 'Rotary'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('diesel', 'Diesel'), ('turbocharged', 'Turbocharged'), ('supercharged', 'Supercharged'), ('w-type', 'W Type')], max_length=25)),
                ('eco_standard', models.CharField(choices=[('evro-6', 'Evro 6'), ('evro-5', 'Evro 5'), ('evro-4', 'Evro 4'), ('evro-3', 'Evro 3'), ('evro-2', 'Evro 2'), ('evro-1', 'Evro 1')], max_length=25)),
                ('checkpoint', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('tiptronic', 'Tiptronic'), ('robot', 'Robot'), ('variator', 'Variator')], max_length=25)),
                ('color', models.CharField(max_length=23, validators=[django.core.validators.MinLengthValidator(2)])),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('rejected', 'Rejected')], default='active', max_length=20)),
                ('region', models.CharField(max_length=23, validators=[django.core.validators.RegexValidator('^[A-Za-z\\s\\-]{1,23}$', 'Region must consist of up to 23 characters and can include only letters, spaces, and dashes.')])),
                ('description', models.TextField(blank=True, max_length=500, validators=[django.core.validators.MinLengthValidator(2)])),
                ('edit_attempts', models.PositiveIntegerField(default=0)),
                ('views', models.PositiveIntegerField(default=0)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='dropout_cars.brandsmodel')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='dropout_cars.modelcar')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'cars',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='CarPhotoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('photo', models.ImageField(blank=True, upload_to=apps.all_cars.listings.services.CarsService.upload_car_photos)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='listings.carsmodel')),
            ],
            options={
                'db_table': 'car_photos',
            },
        ),
    ]
